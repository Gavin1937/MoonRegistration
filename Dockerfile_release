FROM emscripten/emsdk

# setup enviroments
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=America/Los_Angeles
RUN \
    apt update -y && \
    apt install -y tzdata gcc g++ gdb cmake make libopencv-dev python3 nano vim less git wget tar

# setup dependencies
RUN \
    # download opencv source code
    cd /src && wget https://github.com/opencv/opencv/archive/refs/tags/4.8.0.tar.gz && \
    tar -xzvf 4.8.0.tar.gz && \
    # compile opencv for wasm
    export EMSCRIPTEN="/emsdk/upstream/emscripten" && \
    cd /src/opencv-4.8.0 && mkdir build_wasm && \
    python3 ./platforms/js/build_js.py build_wasm --build_wasm

# setup working dir & copy source code
WORKDIR /src/MoonRegistration
COPY . .

# build MoonRegistration lib in Release Mode
RUN \
    # compile linux version
    mkdir /src/MoonRegistration/build_linux && cd /src/MoonRegistration/build_linux && \
    cmake -DCMAKE_BUILD_TYPE=Release -DMR_BUILD_SHARED_LIBS=OFF .. && \
    cmake --build . && \
    cmake -DCMAKE_BUILD_TYPE=Release -DMR_BUILD_SHARED_LIBS=ON .. && \
    cmake --build . && \
    # compile wasm version
    mkdir /src/MoonRegistration/build_wasm && cd /src/MoonRegistration/build_wasm && \
    emcmake cmake -DCMAKE_BUILD_TYPE=Release -DMR_BUILD_WASM=ON -DOPENCV_DIR="/src/opencv-4.8.0" .. && \
    emmake make && \
    # pack release
    cd /src/MoonRegistration && python3 PackReleaseZip.py

ENTRYPOINT ["/bin/bash"]
