name: Pack Release Package

on:
  push:
    tags:
      - 'v*.*.*'
      - 'test'

jobs:
  release:
    
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest]
        os: [windows-latest]
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 
    - uses: jwlawson/actions-setup-cmake@v2.0.1
    
    - name: Setup ENV
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo "VERSION_STR=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    
    # Unix Build using Docker
    - name: Docker Build & Package
      if: matrix.os == 'ubuntu-latest'
      run: docker build -t moonregistration -f ./dockerfiles/release_env.dockerfile .
    
    - name: Docker Create Container
      if: matrix.os == 'ubuntu-latest'
      run: docker create --name moonregistration-container moonregistration
    
    - name: Docker Copy Package Out
      if: matrix.os == 'ubuntu-latest'
      run: |
        docker cp moonregistration-container:"/src/MoonRegistration/archives/" .
    
    # Windows Build
    - name: Windows Build & Package
      if: matrix.os == 'windows-latest'
      run: |
        Invoke-WebRequest https://github.com/Gavin1937/win-opencv/releases/download/4.9.0/opencv-4.9.0.zip -OutFile opencv-4.9.0.zip
        7z x opencv-4.9.0.zip -o"opencv-4.9.0"
        $env:OpenCV_DIR="$(pwd)\opencv-4.9.0"
        python -m venv .venv
        .\.venv\Scripts\activate
        pip install wheel
        mkdir build
        cmake -DCMAKE_BUILD_TYPE=Release -S . -B build -DMR_BUILD_SHARED_LIBS=OFF -DMR_ENABLE_OPENCV_NONFREE=OFF
        cmake --build build --config=Release
        cmake --install build --prefix build/install --config=Release
        cmake -DCMAKE_BUILD_TYPE=Debug -S . -B build -DMR_BUILD_SHARED_LIBS=OFF -DMR_ENABLE_OPENCV_NONFREE=OFF
        cmake --build build --config=Debug
        cmake --install build --prefix build/install --config=Debug
        cmake -DCMAKE_BUILD_TYPE=Release -S . -B build -DMR_BUILD_SHARED_LIBS=ON -DMR_ENABLE_OPENCV_NONFREE=OFF
        cmake --build build --config=Release
        cmake --install build --prefix build/install --config=Release
        cmake -DCMAKE_BUILD_TYPE=Debug -S . -B build -DMR_BUILD_SHARED_LIBS=ON -DMR_ENABLE_OPENCV_NONFREE=OFF
        cmake --build build --config=Debug
        cmake --install build --prefix build/install --config=Debug
        python Release.py ./release_config.json -s pack -m "nonfree=OFF"
        cmake -DCMAKE_BUILD_TYPE=Release -S . -B build -DMR_BUILD_SHARED_LIBS=OFF -DMR_ENABLE_OPENCV_NONFREE=ON
        cmake --build build --config=Release
        cmake --install build --prefix build/install --config=Release
        cmake -DCMAKE_BUILD_TYPE=Debug -S . -B build -DMR_BUILD_SHARED_LIBS=OFF -DMR_ENABLE_OPENCV_NONFREE=ON
        cmake --build build --config=Debug
        cmake --install build --prefix build/install --config=Debug
        cmake -DCMAKE_BUILD_TYPE=Release -S . -B build -DMR_BUILD_SHARED_LIBS=ON -DMR_ENABLE_OPENCV_NONFREE=ON
        cmake --build build --config=Release
        cmake --install build --prefix build/install --config=Release
        cmake -DCMAKE_BUILD_TYPE=Debug -S . -B build -DMR_BUILD_SHARED_LIBS=ON -DMR_ENABLE_OPENCV_NONFREE=ON
        cmake --build build --config=Debug
        cmake --install build --prefix build/install --config=Debug
        python Release.py ./release_config.json -s pack -m "nonfree=ON"
        cd platforms/python
        pip install -r requirements.txt
        python setup.py bdist_wheel
        cd ../..
        python Release.py ./platforms/python/release_config.json -s pack -m "nonfree=OFF"
        cd platforms/python
        python setup.py bdist_wheel --mr-enable-opencv-nonfree
        cd ../..
        python Release.py ./platforms/python/release_config.json -s pack -m "nonfree=ON"
        mkdir archives
        mv MoonRegistration*.zip ./archives
    
    - name: Release archives
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: './archives/MoonRegistration*.zip'
        file_glob: true
        overwrite: true
        tag: '${{ env.RELEASE_VERSION }}'

